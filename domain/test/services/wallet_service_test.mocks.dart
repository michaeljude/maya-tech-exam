// Mocks generated by Mockito 5.4.6 from annotations
// in domain/test/services/wallet_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:domain/domain.dart' as _i2;
import 'package:domain/src/result/result.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i2.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<void>> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#clear, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#delete, [key]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<String?> get(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#get, [key]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<_i4.Result<void>> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#initialize, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> save(String? key, {required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#save, [key], {#value: value}),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#save, [key], {#value: value}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);
}

/// A class which mocks [WalletRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletRepository extends _i1.Mock implements _i2.WalletRepository {
  MockWalletRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<void>> sendMoney({
    required double? amount,
    required String? recipient,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMoney, [], {
              #amount: amount,
              #recipient: recipient,
            }),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#sendMoney, [], {
                  #amount: amount,
                  #recipient: recipient,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i2.AuthenticationService {
  MockAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i2.AuthenticationEntity>> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i4.Result<_i2.AuthenticationEntity>>.value(
              _i5.dummyValue<_i4.Result<_i2.AuthenticationEntity>>(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i2.AuthenticationEntity>>);

  @override
  _i3.Future<_i4.Result<_i2.AuthenticationEntity>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<_i4.Result<_i2.AuthenticationEntity>>.value(
              _i5.dummyValue<_i4.Result<_i2.AuthenticationEntity>>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i2.AuthenticationEntity>>);

  @override
  _i3.Future<String?> getUsername() =>
      (super.noSuchMethod(
            Invocation.method(#getUsername, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<String?> getEmail() =>
      (super.noSuchMethod(
            Invocation.method(#getEmail, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<String?> getName() =>
      (super.noSuchMethod(
            Invocation.method(#getName, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);
}
