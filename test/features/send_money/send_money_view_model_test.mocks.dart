// Mocks generated by Mockito 5.4.6 from annotations
// in monorepo/test/features/send_money/send_money_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:domain/domain.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WalletService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletService extends _i1.Mock implements _i2.WalletService {
  MockWalletService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i2.WalletEntity?> get wallet =>
      (super.noSuchMethod(
            Invocation.getter(#wallet),
            returnValue: _i3.Stream<_i2.WalletEntity?>.empty(),
          )
          as _i3.Stream<_i2.WalletEntity?>);

  @override
  set walletvalue(_i2.WalletEntity? _walletvalue) => super.noSuchMethod(
    Invocation.setter(#walletvalue, _walletvalue),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> initWallet() =>
      (super.noSuchMethod(
            Invocation.method(#initWallet, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.Result<void>> sendMoney({
    required double? amount,
    required String? recipient,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMoney, [], {
              #amount: amount,
              #recipient: recipient,
            }),
            returnValue: _i3.Future<_i2.Result<void>>.value(
              _i4.dummyValue<_i2.Result<void>>(
                this,
                Invocation.method(#sendMoney, [], {
                  #amount: amount,
                  #recipient: recipient,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.Result<void>>);

  @override
  _i3.Future<List<_i2.TransactionEntity>> getTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#getTransactions, []),
            returnValue: _i3.Future<List<_i2.TransactionEntity>>.value(
              <_i2.TransactionEntity>[],
            ),
          )
          as _i3.Future<List<_i2.TransactionEntity>>);

  @override
  void clearWallet() => super.noSuchMethod(
    Invocation.method(#clearWallet, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
